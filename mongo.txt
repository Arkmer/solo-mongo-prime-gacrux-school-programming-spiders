1. Create a collection named orders.
    db.createCollection('orders')

2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields. Order dates should be: 2017-02-03, 2017-04-04, 2017-01-02
orders.insert({ orderTotal:'$200', lineItems:[{productName:'Uniforms', unitPrice:'$50', quantity:4}], orderDate: new Date('2017-02-03') })
orders.insert({ orderTotal:'$40000000', lineItems:[{productName:'M1A1', unitPrice:'$10000000', quantity:4}], orderDate: new Date('2017-04-04') })
orders.insert({ orderTotal:'$64', lineItems:[{productName:'class 1', unitPrice:'$50', quantity:4}], orderDate: new Date('2017-01-02') })

3. Find all orders and make them look pretty.
orders.find().pretty()

4. Find all orders with an orderDate that is after 1/31/2017.
orders.find({orderDate: {$gt: new Date("2017-01-31T00:00:00.000Z")}}).pretty()

5. Change the orderTotal from 2/3/2017 to 63 dollars (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)
orders.update({orderDate: new Date("2017-02-03T00:00:00.000Z")}, {$set: {orderTotal: '$63'}})

6. Add another lineItem to the order from 4/4/2017
orders.update({orderDate: new Date("2017-04-04T00:00:00.000Z")}, {$push: {lineItems: [{productName:'burgers', unitPrice:'$12', quantity:'16'}]}})

7. Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's
orders.update({orderDate: new Date("2017-01-02T00:00:00.000Z")}, {$set: {lineItems: [{productName:'transistor radio', unitPrice:'$50', quantity:'4'}]}})

8. Find orders with lineItems that have a quantity that is less than 10, but greater than 2. You will have to research $elemMatch
orders.find({lineItems: {$elemMatch: {quantity: {$gt: 2, $lt: 10}}}})
